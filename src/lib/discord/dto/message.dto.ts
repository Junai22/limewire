import type { ChannelDTO, GuildMemberDTO, UserDTO } from ".";
import type { ApplicationDTO } from "./application.dto";
import type { AttachmentDTO } from "./attachment.dto";
import type { EmbedDTO } from "./embed.dto";
import type { ReactionDTO } from "./reaction.dto";
import type { RoleDTO } from "./role.dto";

export interface MessageDTO {
    id:                      string;
    channel_id:              string;
    author:                  UserDTO;
    content:                 string;
	timestamp:               string;
	edited_timestamp:        string;
	tts:                     boolean;
	mention_everyone:        boolean;
	mentions:                UserDTO[];
	mention_roles:           RoleDTO[];
	mention_channels?:       { id: string, guild_id: string, type: number, name: string };
    attachments:             AttachmentDTO[];
	embeds:                  EmbedDTO[];
	reactions?:              ReactionDTO[];
	nonce:                   string | number;
	pinned:                  boolean;
	webhook_id?:             string;
    type:                    number;
	activity?:               { type: number, party_id?: string };
	application?:            ApplicationDTO;
	application_id?:         string;
	message_reference?:      { message_id?: string, channel_id?: string, guild_id?: string, fail_if_not_exists?: boolean };
	flags:                   number;
	referenced_message?:     MessageDTO;
	interaction?:            MessageInteractionDTO;
	thread?:                 ChannelDTO;
	components?:             1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;
	stickers?:               MessageStickerObjectDTO;
	position?:               number;
	role_subscription_data?: any; // Im not using this

}

/*
	id	snowflake	id of the message
	channel_id	snowflake	id of the channel the message was sent in
	author*	user object	the author of this message (not guaranteed to be a valid user, see below)
	content**	string	contents of the message
	timestamp	ISO8601 timestamp	when this message was sent
	edited_timestamp	?ISO8601 timestamp	when this message was edited (or null if never)
	tts	boolean	whether this was a TTS message
	mention_everyone	boolean	whether this message mentions everyone
	mentions	array of user objects	users specifically mentioned in the message
	mention_roles	array of role object ids	roles specifically mentioned in this message
	mention_channels?***	array of channel mention objects	channels specifically mentioned in this message
	attachments**	array of attachment objects	any attached files
	embeds**	array of embed objects	any embedded content
	reactions?	array of reaction objects	reactions to the message
	nonce?	integer or string	used for validating a message was sent
	pinned	boolean	whether this message is pinned
	webhook_id?	snowflake	if the message is generated by a webhook, this is the webhook's id
	type	integer	type of message
	activity?	message activity object	sent with Rich Presence-related chat embeds
	application?	partial application object	sent with Rich Presence-related chat embeds
	application_id?	snowflake	if the message is an Interaction or application-owned webhook, this is the id of the application
	message_reference?	message reference object	data showing the source of a crosspost, channel follow add, pin, or reply message
	flags?	integer	message flags combined as a bitfield
	referenced_message?****	?message object	the message associated with the message_reference
	- - -
	interaction?	message interaction object	sent if the message is a response to an Interaction
	thread?	channel object	the thread that was started from this message, includes thread member object
	components?**	array of message components	sent if the message contains components like buttons, action rows, or other interactive components
	sticker_items?	array of message sticker item objects	sent if the message contains stickers
	stickers?	array of sticker objects	Deprecated the stickers sent with the message
	position?	integer	A generally increasing integer (there may be gaps or duplicates) that represents the approximate position of the message in a thread, it can be used to estimate the relative position of the message in a thread in company with total_message_sent on parent thread
	role_subscription_data?	role subscription data object	data of the role subscription purchase or renewal that prompted this ROLE_SUBSCRIPTION_PURCHASE message
*/


interface MessageInteractionDTO {
	id:      string;
	type:    number;
	name:    string;
	user:    UserDTO;
	member?: GuildMemberDTO;
}

/*
	id	snowflake	ID of the interaction
	type	interaction type	Type of interaction
	name	string	Name of the application command, including subcommands and subcommand groups
	user	user object	User who invoked the interaction
	member?	partial member object	Member who invoked the interaction in the guild
*/


interface MessageStickerObjectDTO {
	id:   		 string;
	name: 		 string;
	format_type: number;
}

/*
	id	snowflake	id of the sticker
	name	string	name of the sticker
	format_type	integer	type of sticker format
*/